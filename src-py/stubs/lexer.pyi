from typing import List, Tuple, overload

from errors import InvalidCharError
from tokens import Token

class Lexer:
    def __init__(self, fn: str, ftxt: str) -> None: ...
    def advance(self) -> None: ...
    @overload
    def make_tokens(self) -> Tuple[List[Token], None]: ...
    @overload
    def make_tokens(self) -> Tuple[List, InvalidCharError]: ...
    def make_number(self) -> Token: ...
