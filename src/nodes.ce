Node(token) : start_pos(token.start), end_pos(token.end) {
    dump = f"{token}"
},

NumberNode = Node,

UnaryOpNode = Node + (token, node) : Node(token), end_pos(node.end_pos) {
    dump = Node.dump + f", {node}"
},

BinOpNode = Node + (left_node, token, right_node) : UnaryOpNode(token, right_node), pos_start(left_node.pos_start) {
    dump = f"{left_node}, " + UnaryOpNode.dump
}